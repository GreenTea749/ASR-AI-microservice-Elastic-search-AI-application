services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - node.name=es01
      - cluster.name=cv-cluster
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - xpack.security.enabled=false
      - network.host=0.0.0.0
      - http.cors.enabled=true
      - 'http.cors.allow-origin="*"'      
      - http.cors.allow-credentials=true 
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - cluster.routing.allocation.disk.watermark.low=99%

      - cluster.routing.allocation.disk.watermark.high=99%

      - cluster.routing.allocation.disk.watermark.flood_stage=99%
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=1s || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 10
    networks: [esnet]

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - node.name=es02
      - cluster.name=cv-cluster
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - xpack.security.enabled=false
      - network.host=0.0.0.0
      - http.cors.enabled=true
      - 'http.cors.allow-origin="*"'
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - cluster.routing.allocation.disk.watermark.low=99%
      - cluster.routing.allocation.disk.watermark.high=99%
      - cluster.routing.allocation.disk.watermark.flood_stage=99%
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata02:/usr/share/elasticsearch/data
    networks: [esnet]

  indexer:
    build: .
    depends_on:
      es01:
        condition: service_healthy
    networks: [esnet]

volumes:
  esdata01:
  esdata02:

networks:
  esnet:
    name: esnet
    external: true
